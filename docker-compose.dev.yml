version: "3"
services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - "./docker/data/db:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - db

  adminer:
    image: adminer
    restart: always
    ports:
      - 5050:8080
    networks:
      - db

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - "./docker/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - nginx

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./frontend:/transcendence
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: ${API_URL}
      REACT_APP_SOCKET_URL: ${SOCKET_URL}
      REACT_APP_COOKIE_DOMAIN: ${COOKIE_DOMAIN}
    networks:
      - nginx

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./backend:/transcendence
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      API42_CLIENT_ID: ${API42_CLIENT_ID}
      API42_CLIENT_SECRET: ${API42_CLIENT_SECRET}
      API42_REDIRECT_URI: ${API42_REDIRECT_URI}
      JWT_SECRET: ${JWT_SECRET}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      FRONTEND_URL: ${FRONTEND_URL}
      API_URL: ${API_URL}
    networks:
      - nginx
      - db

networks:
  nginx:
    driver: bridge
  db:
    driver: bridge
